apiVersion: v1
kind: ConfigMap
metadata:
  name: espsrcgatekeeper-test
  namespace: espsrcgatekeeper
data:
  values.yaml: |
    replicaCount: 1  # Ajusta seg√∫n necesites
    deployment_echo:
        #namespace: ska-src-gatekeeper-echo
        namespace: espsrcgatekeeper
        image: harbor.srcdev.skao.int/ska-src-dm-da-service-gatekeeper/service-gatekeeper-echo:1.0.1

    gatekeeper:
        namespace: ska-src-gatekeeper
        ingress_proxyBodySize: 5000m
        ingress_proxyBuffering: "off"
        ingress_proxyRequestBuffering: "off"
        iam_token_endpoint: https://ska-iam.stfc.ac.uk/token
        permissions_api_plugin_authz_endpoint: https://permissions.srcdev.skao.int/api/v1/authorise/plugin/
        site_capabilities_api_get_service_by_id_endpoint: https://site-capabilities.srcdev.skao.int/api/v1/services/
        
        existingSecret: false
        site_capabilities_gatekeeper_client_scopes: site-capabilities-api-service
        site_capabilities_gatekeeper_client_audience: site-capabilities-api
        services_cache_ttl: 3600
        services:
            - route: "/soda"
              namespace: espsrcsoda
              prefix: "http://"
              service_name: "ska-src-soda"
              ingress_host: "dev.gatekeeper.espsrc.iaa.csic.es"
              port: 8080
              uuid: "bad7edcd-a0f7-415d-8d9d-0977c6d501b5" #From operator
            - route: "/echo"                          # request route
              namespace: ska-src-gatekeeper-echo      # namespace the service will run in, can be different to gatekeeper ns
              prefix: "http://"                       # usually http:// assuming SSL termination occurs upstream
              service_name: "espsrc-gatekeeper-echo" # to proxied address
              ingress_host: "dev.gatekeeper.espsrc.iaa.csic.es" # Host domain the Ingress rules will apply to
              port: 8080
              uuid: "ec31f0aa-3b80-4980-a8c9-08d2120c3034" #From operator dev


    ingress-nginx:
      controller:
        replicaCount: 1
        service:
            type: LoadBalancer
        metrics:
            enabled: true
        ingressClassResource:
            name: gatekeeper-nginx
        allowSnippetAnnotations: true
        extraArgs:
            enable-ssl-passthrough: ""
        extraVolumeMounts:
            - name: response-lua
                mountPath: /etc/nginx/lua/conf/response.lua
                subPath: response.lua
                readOnly: true
            - name: backend-lua
                mountPath: /etc/nginx/lua/conf/backend.lua
                subPath: backend.lua
                readOnly: true
            - name: mappings-lua
                mountPath: /etc/nginx/lua/conf/mappings.lua
                subPath: mappings.lua
                readOnly: true
            - name: permissions-lua
                mountPath: /etc/nginx/lua/conf/permissions.lua
                subPath: permissions.lua
                readOnly: true
            - name: site-capabilities-lua
                mountPath: /etc/nginx/lua/conf/site_capabilities.lua
                subPath: site-capabilities.lua
                readOnly: true
        extraVolumes:
            - name: response-lua
                configMap:
                name: response-lua-config
            - name: backend-lua
                configMap:
                name: backend-lua-config
            - name: mappings-lua
                configMap:
                name: mappings-lua-config
            - name: permissions-lua
                configMap:
                name: permissions-lua-config
            - name: site-capabilities-lua
                configMap:
                name: site-capabilities-lua-config

  