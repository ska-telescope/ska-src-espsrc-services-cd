apiVersion: v1
kind: ConfigMap
metadata:
  name: espsrcgatekeeper-values
  #namespace: espsrcgatekeeper
  namespace: gatekeeper
data:
  values.yaml: |
    echo:
      namespace: gatekeeper
      image:
        registry: harbor.srcdev.skao.int/ska-src-dm-da-service-gatekeeper
        name: service-gatekeeper-echo
        tag: 1.0.1

    gatekeeper:
      namespace: gatekeeper
      # the DNS server to use for lookups
      #resolver: 8.8.8.8
      cache:
        # the time to life for the services cache
        ttl: 3600
      permissions:
        # the permissions API plugin authz endpoint
        pluginAuthzEndpoint: https://permissions.srcdev.skao.int/api/v1/authorise/plugin/  
      ingress:
        proxyBodySize: 5000m
        proxyBuffering: "off"
        proxyRequestBuffering: "off"
      siteCapabilities:
        # the SKA IAM token endpoint
        tokenEndpoint: https://ska-iam.stfc.ac.uk/token
        # the site-capabilites API get service by id endpoint (to lookup services)
        getServiceEndpoint: https://site-capabilities.srcdev.skao.int/api/v1/services/
        # the client scopes requested by this node's site-capabilities gatekeeper service client
        clientScopes: site-capabilities-api-service
        # the client audience requested by this node's site-capabilities gatekeeper service client
        clientAudience: site-capabilities-api
        # the client id for this node's site-capabilities gatekeeper service client
        clientId:
        # the client secret for this node's site-capabilities gatekeeper service client
        clientSecret:
        # If .Values.gatekeeper.existingSecret is defined and set to true, the above client_id and client_secret will be ignored.
        # Instead, the deployment will use an existing secret. The existing secret's name needs to match the secretName
        # in the .Values.ingress-nginx.controller.extraVolume named client-credentials below.
        # e.g. an existing secret named "client-credentials".
        existingSecret: true
      services:
        - route: "/echo"
          namespace: gatekeeper
          prefix: "http://"
          service_name: "ska-src-dm-da-service-gatekeeper-echo"
          ingress_host: "dev.gatekeeper.espsrc.iaa.csic.es"
          port: 31101
          uuid: "ec31f0aa-3b80-4980-a8c9-08d2120c3034"
        - route: "/soda"
          namespace: espsrcsoda
          prefix: "http://"
          service_name: "ska-src-soda"
          ingress_host: "dev.gatekeeper.espsrc.iaa.csic.es"
          port: 8080
          uuid: "bad7edcd-a0f7-415d-8d9d-0977c6d501b5"


    ingress-nginx:
      controller:
        replicaCount: 1
        service:
          type: NodePort
          nodePorts:
            http: 30111
          #loadBalancerIP: 192.168.250.245
        metrics:
          enabled: true
        ingressClassResource:
          name: gatekeeper-nginx
        admissionWebhooks:
          enabled: false
        allowSnippetAnnotations: true
        extraArgs:
          enable-ssl-passthrough: ""
          #default-ssl-certificate: "gatekeeper/nginx-certs"
        extraVolumeMounts:
          - name: lua-scripts
            mountPath: /etc/nginx/lua/conf/response.lua
            subPath: response.lua
            readOnly: true
          - name: lua-scripts
            mountPath: /etc/nginx/lua/conf/backend.lua
            subPath: backend.lua
            readOnly: true
          - name: lua-scripts
            mountPath: /etc/nginx/lua/conf/mappings.lua
            subPath: mappings.lua
            readOnly: true
          - name: lua-scripts
            mountPath: /etc/nginx/lua/conf/permissions.lua
            subPath: permissions.lua
            readOnly: true
          - name: lua-scripts
            mountPath: /etc/nginx/lua/conf/site_capabilities.lua
            subPath: site-capabilities.lua
            readOnly: true
          - name: client-credentials
            mountPath: /etc/credentials
            readOnly: true
        extraVolumes:
          - name: lua-scripts
            configMap:
              name: lua-scripts
          - name: client-credentials
            secret:
              secretName: espsrcgatekeeper-s